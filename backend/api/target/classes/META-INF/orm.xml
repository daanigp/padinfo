<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm" version="2.1">
    <!-- 5.- Buscar el usuario que este conectado -->
    <named-query name="UserInfo.selectUserIsConnectedByUserId">
        <query>
            SELECT u.isConnected
            FROM UserInfo u
            WHERE u.id = ?1
        </query>
    </named-query>
    <!-- 7.- Obtener los jugadores según su género -->
    <named-query name="Player.getPlayersByGender">
        <query>
            SELECT p
            FROM Player p
            WHERE p.gender = ?1
        </query>
    </named-query>
    <!-- 8.- Obtener el idGame más alto -->
    <named-query name="Game.getMaxGameId">
        <query>
            SELECT MAX(g.id) as maxIdGame
            FROM Game g
        </query>
    </named-query>
    <!-- 9.- Obtener los partidos del idUsuario x -->
    <named-query name="Game.getGamesByUserId">
        <query>
            SELECT g
            FROM Game g
            WHERE g.userInfo.id = ?1
        </query>
    </named-query>
    <!-- 13.- Seleccionar el usuario con username = 'x' -->
    <named-query name="UserInfo.selectUserInfoByUsername">
        <query>
            SELECT u
            FROM UserInfo u
            WHERE u.username = ?1
        </query>
    </named-query>

    <!-- Comprobar si existe un nombre de usuario -->
    <named-query name="UserInfo.existsByUsername">
        <query>SELECT CASE WHEN COUNT(u.id) > 0 THEN TRUE ELSE FALSE END FROM UserInfo u WHERE u.username = ?1</query>
    </named-query>

    <named-query name="UserInfo.getRolesByUserId">
        <query>
            SELECT r.id
            FROM UserInfo u
            JOIN u.roles r
            WHERE u.id = ?1
        </query>
    </named-query>

</entity-mappings>